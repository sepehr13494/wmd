// Mocks generated by Mockito 5.3.2 from annotations
// in wmd/test/features/dashboard/performance_table/data/repositories/performance_table_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wmd/core/error_and_success/failures.dart' as _i12;
import 'package:wmd/features/dashboard/performance_table/data/data_sources/performance_table_remote_datasource.dart'
    as _i3;
import 'package:wmd/features/dashboard/performance_table/data/models/get_asset_class_params.dart'
    as _i6;
import 'package:wmd/features/dashboard/performance_table/data/models/get_asset_class_response.dart'
    as _i5;
import 'package:wmd/features/dashboard/performance_table/data/models/get_benchmark_params.dart'
    as _i8;
import 'package:wmd/features/dashboard/performance_table/data/models/get_benchmark_response.dart'
    as _i7;
import 'package:wmd/features/dashboard/performance_table/data/models/get_custodian_performance_params.dart'
    as _i10;
import 'package:wmd/features/dashboard/performance_table/data/models/get_custodian_performance_response.dart'
    as _i9;
import 'package:wmd/features/dashboard/performance_table/domain/entities/get_asset_class_entity.dart'
    as _i13;
import 'package:wmd/features/dashboard/performance_table/domain/entities/get_benchmark_entity.dart'
    as _i14;
import 'package:wmd/features/dashboard/performance_table/domain/entities/get_custodian_performance_entity.dart'
    as _i15;
import 'package:wmd/features/dashboard/performance_table/domain/repositories/performance_table_repository.dart'
    as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PerformanceTableRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPerformanceTableRemoteDataSource extends _i1.Mock
    implements _i3.PerformanceTableRemoteDataSource {
  MockPerformanceTableRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.GetAssetClassResponse>> getAssetClass(
          _i6.GetAssetClassParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssetClass,
          [params],
        ),
        returnValue: _i4.Future<List<_i5.GetAssetClassResponse>>.value(
            <_i5.GetAssetClassResponse>[]),
      ) as _i4.Future<List<_i5.GetAssetClassResponse>>);
  @override
  _i4.Future<List<_i7.GetBenchmarkResponse>> getBenchmark(
          _i8.GetBenchmarkParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBenchmark,
          [params],
        ),
        returnValue: _i4.Future<List<_i7.GetBenchmarkResponse>>.value(
            <_i7.GetBenchmarkResponse>[]),
      ) as _i4.Future<List<_i7.GetBenchmarkResponse>>);
  @override
  _i4.Future<List<_i9.GetCustodianPerformanceResponse>> getCustodianPerformance(
          _i10.GetCustodianPerformanceParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCustodianPerformance,
          [params],
        ),
        returnValue:
            _i4.Future<List<_i9.GetCustodianPerformanceResponse>>.value(
                <_i9.GetCustodianPerformanceResponse>[]),
      ) as _i4.Future<List<_i9.GetCustodianPerformanceResponse>>);
}

/// A class which mocks [PerformanceTableRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPerformanceTableRepository extends _i1.Mock
    implements _i11.PerformanceTableRepository {
  MockPerformanceTableRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
      _i2.Either<_i12.Failure, List<_i13.GetAssetClassEntity>>> getAssetClass(
          _i6.GetAssetClassParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssetClass,
          [params],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i12.Failure, List<_i13.GetAssetClassEntity>>>.value(
            _FakeEither_0<_i12.Failure, List<_i13.GetAssetClassEntity>>(
          this,
          Invocation.method(
            #getAssetClass,
            [params],
          ),
        )),
      ) as _i4
          .Future<_i2.Either<_i12.Failure, List<_i13.GetAssetClassEntity>>>);
  @override
  _i4.Future<
      _i2.Either<_i12.Failure, List<_i14.GetBenchmarkEntity>>> getBenchmark(
          _i8.GetBenchmarkParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBenchmark,
          [params],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i12.Failure, List<_i14.GetBenchmarkEntity>>>.value(
            _FakeEither_0<_i12.Failure, List<_i14.GetBenchmarkEntity>>(
          this,
          Invocation.method(
            #getBenchmark,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i12.Failure, List<_i14.GetBenchmarkEntity>>>);
  @override
  _i4.Future<_i2.Either<_i12.Failure, List<_i15.GetCustodianPerformanceEntity>>>
      getCustodianPerformance(_i10.GetCustodianPerformanceParams? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #getCustodianPerformance,
              [params],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i12.Failure,
                        List<_i15.GetCustodianPerformanceEntity>>>.value(
                _FakeEither_0<_i12.Failure,
                    List<_i15.GetCustodianPerformanceEntity>>(
              this,
              Invocation.method(
                #getCustodianPerformance,
                [params],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i12.Failure,
                  List<_i15.GetCustodianPerformanceEntity>>>);
}
