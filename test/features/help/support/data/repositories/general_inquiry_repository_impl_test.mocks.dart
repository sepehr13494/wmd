// Mocks generated by Mockito 5.3.2 from annotations
// in wmd/test/features/help/support/data/repositories/general_inquiry_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wmd/core/error_and_success/failures.dart' as _i8;
import 'package:wmd/core/error_and_success/succeses.dart' as _i9;
import 'package:wmd/features/help/support/data/data_sources/general_inquiry_remote_data_source.dart'
    as _i4;
import 'package:wmd/features/help/support/data/models/support_status.dart'
    as _i2;
import 'package:wmd/features/help/support/domain/repositories/general_inquiry_repository.dart'
    as _i7;
import 'package:wmd/features/help/support/domain/use_cases/post_general_inquiry_usecase.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupportStatus_0 extends _i1.SmartFake implements _i2.SupportStatus {
  _FakeSupportStatus_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GeneralInquiryRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeneralInquiryRemoteDataSource extends _i1.Mock
    implements _i4.GeneralInquiryRemoteDataSource {
  MockGeneralInquiryRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.SupportStatus> postGeneralInquiry(
          _i6.GeneralInquiryParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #postGeneralInquiry,
          [params],
        ),
        returnValue: _i5.Future<_i2.SupportStatus>.value(_FakeSupportStatus_0(
          this,
          Invocation.method(
            #postGeneralInquiry,
            [params],
          ),
        )),
      ) as _i5.Future<_i2.SupportStatus>);
}

/// A class which mocks [GeneralInquiryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeneralInquiryRepository extends _i1.Mock
    implements _i7.GeneralInquiryRepository {
  MockGeneralInquiryRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Either<_i8.Failure, _i9.AppSuccess>> postGeneralInquiry(
          _i6.GeneralInquiryParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #postGeneralInquiry,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i8.Failure, _i9.AppSuccess>>.value(
            _FakeEither_1<_i8.Failure, _i9.AppSuccess>(
          this,
          Invocation.method(
            #postGeneralInquiry,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i8.Failure, _i9.AppSuccess>>);
}
