// Mocks generated by Mockito 5.3.2 from annotations
// in wmd/test/features/settings/linked_accounts/data/repositories/linked_accounts_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wmd/core/error_and_success/failures.dart' as _i9;
import 'package:wmd/core/error_and_success/succeses.dart' as _i11;
import 'package:wmd/features/add_assets/custodian_bank_auth/data/models/delete_custodian_bank_status_params.dart'
    as _i7;
import 'package:wmd/features/settings/linked_accounts/data/data_sources/linked_accounts_remote_datasource.dart'
    as _i3;
import 'package:wmd/features/settings/linked_accounts/data/models/get_linked_accounts_params.dart'
    as _i6;
import 'package:wmd/features/settings/linked_accounts/data/models/get_linked_accounts_response.dart'
    as _i5;
import 'package:wmd/features/settings/linked_accounts/domain/entities/get_linked_accounts_entity.dart'
    as _i10;
import 'package:wmd/features/settings/linked_accounts/domain/repositories/linked_accounts_repository.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LinkedAccountsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLinkedAccountsRemoteDataSource extends _i1.Mock
    implements _i3.LinkedAccountsRemoteDataSource {
  MockLinkedAccountsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.GetLinkedAccountsResponse>> getLinkedAccounts(
          _i6.GetLinkedAccountsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLinkedAccounts,
          [params],
        ),
        returnValue: _i4.Future<List<_i5.GetLinkedAccountsResponse>>.value(
            <_i5.GetLinkedAccountsResponse>[]),
      ) as _i4.Future<List<_i5.GetLinkedAccountsResponse>>);
  @override
  _i4.Future<void> deleteLinkedAccounts(
          _i7.DeleteCustodianBankStatusParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteLinkedAccounts,
          [params],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [LinkedAccountsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLinkedAccountsRepository extends _i1.Mock
    implements _i8.LinkedAccountsRepository {
  MockLinkedAccountsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i9.Failure, List<_i10.GetLinkedAccountsEntity>>>
      getLinkedAccounts(_i6.GetLinkedAccountsParams? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #getLinkedAccounts,
              [params],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i9.Failure,
                        List<_i10.GetLinkedAccountsEntity>>>.value(
                _FakeEither_0<_i9.Failure, List<_i10.GetLinkedAccountsEntity>>(
              this,
              Invocation.method(
                #getLinkedAccounts,
                [params],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i9.Failure, List<_i10.GetLinkedAccountsEntity>>>);
  @override
  _i4.Future<_i2.Either<_i9.Failure, _i11.AppSuccess>> deleteLinkedAccounts(
          _i7.DeleteCustodianBankStatusParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteLinkedAccounts,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i9.Failure, _i11.AppSuccess>>.value(
            _FakeEither_0<_i9.Failure, _i11.AppSuccess>(
          this,
          Invocation.method(
            #deleteLinkedAccounts,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.Failure, _i11.AppSuccess>>);
}
