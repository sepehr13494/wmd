// Mocks generated by Mockito 5.3.1 from annotations
// in wmd/test/features/authentication/data/repositories/auth_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:wmd/features/authentication/data/data_sources/auth_remote_data_source.dart'
    as _i4;
import 'package:wmd/features/authentication/data/models/login_response_model.dart'
    as _i2;
import 'package:wmd/features/authentication/data/models/register_response_model.dart'
    as _i3;
import 'package:wmd/features/authentication/domain/use_cases/post_login_usecase.dart'
    as _i6;
import 'package:wmd/features/authentication/domain/use_cases/post_register_usecase.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponse_0 extends _i1.SmartFake implements _i2.LoginResponse {
  _FakeLoginResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRegisterResponse_1 extends _i1.SmartFake
    implements _i3.RegisterResponse {
  _FakeRegisterResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i4.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.LoginResponse> login(_i6.LoginParams? loginParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [loginParams],
        ),
        returnValue: _i5.Future<_i2.LoginResponse>.value(_FakeLoginResponse_0(
          this,
          Invocation.method(
            #login,
            [loginParams],
          ),
        )),
      ) as _i5.Future<_i2.LoginResponse>);
  @override
  _i5.Future<_i3.RegisterResponse> register(_i7.RegisterParams? loginParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [loginParams],
        ),
        returnValue:
            _i5.Future<_i3.RegisterResponse>.value(_FakeRegisterResponse_1(
          this,
          Invocation.method(
            #register,
            [loginParams],
          ),
        )),
      ) as _i5.Future<_i3.RegisterResponse>);
}
