// Mocks generated by Mockito 5.3.1 from annotations
// in wmd/test/features/assets_overview/assets_overview/data/repositories/assets_overview_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wmd/core/error_and_success/failures.dart' as _i8;
import 'package:wmd/features/assets_overview/assets_overview/data/data_sources/asset_overview_remote_datasource.dart'
    as _i3;
import 'package:wmd/features/assets_overview/assets_overview/data/models/assets_overview_params.dart'
    as _i6;
import 'package:wmd/features/assets_overview/assets_overview/data/models/assets_overview_response.dart'
    as _i5;
import 'package:wmd/features/assets_overview/assets_overview/domain/entities/assets_overview_entity.dart'
    as _i9;
import 'package:wmd/features/assets_overview/assets_overview/domain/repositories/assets_overview_repository.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AssetsOverviewRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssetsOverviewRemoteDataSource extends _i1.Mock
    implements _i3.AssetsOverviewRemoteDataSource {
  MockAssetsOverviewRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.AssetsOverviewResponse>> getAssetsOverview(
          _i6.AssetsOverviewParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssetsOverview,
          [params],
        ),
        returnValue: _i4.Future<List<_i5.AssetsOverviewResponse>>.value(
            <_i5.AssetsOverviewResponse>[]),
      ) as _i4.Future<List<_i5.AssetsOverviewResponse>>);
}

/// A class which mocks [AssetsOverviewRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssetsOverviewRepository extends _i1.Mock
    implements _i7.AssetsOverviewRepository {
  MockAssetsOverviewRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i9.AssetsOverviewEntity>>>
      getAssetsOverview(_i6.AssetsOverviewParams? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAssetsOverview,
              [params],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i8.Failure,
                        List<_i9.AssetsOverviewEntity>>>.value(
                _FakeEither_0<_i8.Failure, List<_i9.AssetsOverviewEntity>>(
              this,
              Invocation.method(
                #getAssetsOverview,
                [params],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i8.Failure, List<_i9.AssetsOverviewEntity>>>);
}
