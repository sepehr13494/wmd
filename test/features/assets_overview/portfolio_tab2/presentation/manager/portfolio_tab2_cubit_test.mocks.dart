// Mocks generated by Mockito 5.3.2 from annotations
// in wmd/test/features/assets_overview/portfolio_tab2/presentation/manager/portfolio_tab2_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wmd/core/error_and_success/failures.dart' as _i7;
import 'package:wmd/core/util/local_storage.dart' as _i3;
import 'package:wmd/features/assets_overview/portfolio_tab2/domain/entities/get_portfolio_allocation_entity.dart'
    as _i8;
import 'package:wmd/features/assets_overview/portfolio_tab2/domain/entities/get_portfolio_tab_entity.dart'
    as _i10;
import 'package:wmd/features/assets_overview/portfolio_tab2/domain/repositories/portfolio_tab2_repository.dart'
    as _i2;
import 'package:wmd/features/assets_overview/portfolio_tab2/domain/use_cases/get_portfolio_allocation_usecase.dart'
    as _i5;
import 'package:wmd/features/assets_overview/portfolio_tab2/domain/use_cases/get_portfolio_tab_usecase.dart'
    as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePortfolioTab2Repository_0 extends _i1.SmartFake
    implements _i2.PortfolioTab2Repository {
  _FakePortfolioTab2Repository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalStorage_1 extends _i1.SmartFake implements _i3.LocalStorage {
  _FakeLocalStorage_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_2<L, R> extends _i1.SmartFake implements _i4.Either<L, R> {
  _FakeEither_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetPortfolioAllocationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPortfolioAllocationUseCase extends _i1.Mock
    implements _i5.GetPortfolioAllocationUseCase {
  MockGetPortfolioAllocationUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PortfolioTab2Repository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakePortfolioTab2Repository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.PortfolioTab2Repository);
  @override
  _i3.LocalStorage get localStorage => (super.noSuchMethod(
        Invocation.getter(#localStorage),
        returnValue: _FakeLocalStorage_1(
          this,
          Invocation.getter(#localStorage),
        ),
      ) as _i3.LocalStorage);
  @override
  _i6.Future<_i4.Either<_i7.Failure, List<_i8.GetPortfolioAllocationEntity>>>
      call() => (super.noSuchMethod(
            Invocation.method(
              #call,
              [],
            ),
            returnValue: _i6.Future<
                    _i4.Either<_i7.Failure,
                        List<_i8.GetPortfolioAllocationEntity>>>.value(
                _FakeEither_2<_i7.Failure,
                    List<_i8.GetPortfolioAllocationEntity>>(
              this,
              Invocation.method(
                #call,
                [],
              ),
            )),
          ) as _i6.Future<
              _i4.Either<_i7.Failure, List<_i8.GetPortfolioAllocationEntity>>>);
}

/// A class which mocks [GetPortfolioTabUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPortfolioTabUseCase extends _i1.Mock
    implements _i9.GetPortfolioTabUseCase {
  MockGetPortfolioTabUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PortfolioTab2Repository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakePortfolioTab2Repository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.PortfolioTab2Repository);
  @override
  _i3.LocalStorage get localStorage => (super.noSuchMethod(
        Invocation.getter(#localStorage),
        returnValue: _FakeLocalStorage_1(
          this,
          Invocation.getter(#localStorage),
        ),
      ) as _i3.LocalStorage);
  @override
  _i6.Future<_i4.Either<_i7.Failure, List<_i10.GetPortfolioTabEntity>>> call(
          String? portfolioId) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [portfolioId],
        ),
        returnValue: _i6.Future<
                _i4.Either<_i7.Failure,
                    List<_i10.GetPortfolioTabEntity>>>.value(
            _FakeEither_2<_i7.Failure, List<_i10.GetPortfolioTabEntity>>(
          this,
          Invocation.method(
            #call,
            [portfolioId],
          ),
        )),
      ) as _i6
          .Future<_i4.Either<_i7.Failure, List<_i10.GetPortfolioTabEntity>>>);
}
