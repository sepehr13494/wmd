// Mocks generated by Mockito 5.3.2 from annotations
// in wmd/test/features/assets_overview/portfolio_tab2/data/repositories/portfolio_tab2_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wmd/core/error_and_success/failures.dart' as _i10;
import 'package:wmd/features/assets_overview/portfolio_tab2/data/data_sources/portfolio_tab2_remote_datasource.dart'
    as _i3;
import 'package:wmd/features/assets_overview/portfolio_tab2/data/models/get_portfolio_allocation_params.dart'
    as _i6;
import 'package:wmd/features/assets_overview/portfolio_tab2/data/models/get_portfolio_allocation_response.dart'
    as _i5;
import 'package:wmd/features/assets_overview/portfolio_tab2/data/models/get_portfolio_tab_params.dart'
    as _i8;
import 'package:wmd/features/assets_overview/portfolio_tab2/data/models/get_portfolio_tab_response.dart'
    as _i7;
import 'package:wmd/features/assets_overview/portfolio_tab2/domain/entities/get_portfolio_allocation_entity.dart'
    as _i11;
import 'package:wmd/features/assets_overview/portfolio_tab2/domain/entities/get_portfolio_tab_entity.dart'
    as _i12;
import 'package:wmd/features/assets_overview/portfolio_tab2/domain/repositories/portfolio_tab2_repository.dart'
    as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PortfolioTab2RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPortfolioTab2RemoteDataSource extends _i1.Mock
    implements _i3.PortfolioTab2RemoteDataSource {
  MockPortfolioTab2RemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.GetPortfolioAllocationResponse>> getPortfolioAllocation(
          _i6.GetPortfolioAllocationParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPortfolioAllocation,
          [params],
        ),
        returnValue: _i4.Future<List<_i5.GetPortfolioAllocationResponse>>.value(
            <_i5.GetPortfolioAllocationResponse>[]),
      ) as _i4.Future<List<_i5.GetPortfolioAllocationResponse>>);
  @override
  _i4.Future<List<_i7.GetPortfolioTabResponse>> getPortfolioTab(
          _i8.GetPortfolioTabParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPortfolioTab,
          [params],
        ),
        returnValue: _i4.Future<List<_i7.GetPortfolioTabResponse>>.value(
            <_i7.GetPortfolioTabResponse>[]),
      ) as _i4.Future<List<_i7.GetPortfolioTabResponse>>);
}

/// A class which mocks [PortfolioTab2Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPortfolioTab2Repository extends _i1.Mock
    implements _i9.PortfolioTab2Repository {
  MockPortfolioTab2Repository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i10.Failure, List<_i11.GetPortfolioAllocationEntity>>>
      getPortfolioAllocation(_i6.GetPortfolioAllocationParams? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #getPortfolioAllocation,
              [params],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i10.Failure,
                        List<_i11.GetPortfolioAllocationEntity>>>.value(
                _FakeEither_0<_i10.Failure,
                    List<_i11.GetPortfolioAllocationEntity>>(
              this,
              Invocation.method(
                #getPortfolioAllocation,
                [params],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i10.Failure,
                  List<_i11.GetPortfolioAllocationEntity>>>);
  @override
  _i4.Future<_i2.Either<_i10.Failure, List<_i12.GetPortfolioTabEntity>>>
      getPortfolioTab(_i8.GetPortfolioTabParams? params) => (super.noSuchMethod(
            Invocation.method(
              #getPortfolioTab,
              [params],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i10.Failure,
                        List<_i12.GetPortfolioTabEntity>>>.value(
                _FakeEither_0<_i10.Failure, List<_i12.GetPortfolioTabEntity>>(
              this,
              Invocation.method(
                #getPortfolioTab,
                [params],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i10.Failure, List<_i12.GetPortfolioTabEntity>>>);
}
