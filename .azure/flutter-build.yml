variables:
  flutter_bin: /Users/runner/hostedtoolcache/Flutter/3.3.2/macos/flutter/bin
  group: DevEnvVariables

stages:
- stage: ParallelJobs
  jobs:
    - job:
      steps:
        - bash: echo "Start Parallel Build for all envs" 

- stage: AndroidStage
  dependsOn: ParallelJobs
  displayName: Android
  jobs:
  - job: Build_Android_App
    pool:
      vmImage: 'macOS-latest'
    steps:
    - task: FlutterInstall@0
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'custom'
        customVersion: "3.3.2"
      displayName: "Flutter - Install Flutter SDK"
      
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '11'
        jdkArchitectureOption: x64
        jdkSourceOption: PreInstalled
      displayName: "Java - Intsall Java 11"

    - script:
        $(flutter_bin)/flutter config --no-analytics
      displayName: "Flutter - Disable Analytics"

    - script:
        $(flutter_bin)/flutter gen-l10n import 'package:flutter_gen/gen_l10n/app_localizations.dart'
      displayName: "Flutter - Generate Localizations"
    
    # - script:
    #     $(flutter_bin)/flutter pub run build_runner build --delete-conflicting-outputs
    #   displayName: "Flutter - Generate Mocks"

    - task: FlutterBuild@0
      inputs:
        target: 'apk'
        projectDirectory: '.'
        entryPoint: "lib/main.dart"
        iosCodesign: false
        extraArgs: "--target-platform android-arm,android-arm64 --dart-define=env=qa"
      displayName: "Flutter - Build Mobile App"

    # - task: FlutterTest@0
    #   inputs:
    #     projectDirectory: '.'

    - script:
        'curl -u "madhan_RyMqet:Yp3kCXvGXw5GqxxBHrQB" -X POST "https://api-cloud.browserstack.com/app-live/upload" -F "file=@/Users/runner/work/1/s/build/app/outputs/flutter-apk/app-release.apk" -F "data={\"custom_id\": \"WMD-NativeMobile-Andriod-QA\"}"'
      displayName: "BrowserStack - Publish Android App"

    - task: CopyFiles@2
      displayName: "Copy app to staging directory"
      inputs:
        sourceFolder: '$(Agent.BuildDirectory)'
        contents: '/Users/runner/work/1/s/build/app/outputs/flutter-apk/app-release.apk'
        targetFolder: '$(Build.StagingDirectory)'
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: "Publish APK file"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'APK'
        publishLocation: 'Container'

- stage: iOSStage
  dependsOn: ParallelJobs
  displayName: iOS
  jobs:
  - job: iOSJob
    pool:
      vmImage: 'macOS-latest'
    displayName: iOS
    steps: 
    - task: FlutterInstall@0
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'custom'
        customVersion: "3.3.2"
      displayName: "Flutter - Install Flutter SDK"

    # - task: FlutterBuild@0
    #   inputs:
    #     target: 'ios'
    #     projectDirectory: '.'
    #     entryPoint: "lib/main.dart"
    #     iosCodesign: false
    #     extraArgs: "--dart-define=env=qa"
    #   displayName: "Flutter - Build iOS App"

    - script:
        $(flutter_bin)/flutter config --no-analytics
      displayName: "Flutter - Disable Analytics"

    - script:
        $(flutter_bin)/flutter gen-l10n import 'package:flutter_gen/gen_l10n/app_localizations.dart'
      displayName: "Flutter - Generate Localizations"

    - script:
        $(flutter_bin)/flutter build ios -h -v
      displayName: "Flutter - Build iOS App"

    - script:
        $(flutter_bin)/flutter build ipa --no-codesign --target=lib/main.dart --dart-define=env=qa
      displayName: "Flutter - Build iOS App"

    - task: CopyFiles@2
      displayName: "Copy app to staging directory"
      inputs:
        sourceFolder: '$(Agent.BuildDirectory)'
        contents: '**/ipa/*.ipa'
        targetFolder: '$(Build.StagingDirectory)'
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: "Publish IPA file"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'IPA'
        publishLocation: 'Container'