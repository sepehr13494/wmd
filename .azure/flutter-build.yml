trigger:
 branches:
  include:
  - master
  exclude:
    - '*'
 paths:
  exclude:
  - pubspec.yaml

variables:
  flutter_bin: /Users/runner/hostedtoolcache/Flutter/3.3.2/macos/flutter/bin
  group: DevEnvVariables

stages:
- stage: ParallelJobs
  jobs:
    - job:
      steps:
        - checkout: self
          persistCredentials: true
          clean: true

        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              $filePath=$null
              $version = $null
              $versionComponents = $null
              $patch = $null
              $newVersion = $null
                                
              $filePath = './pubspec.yaml'
              $version = (Get-Content $filePath | Select-String 'version:').Line.Split(':')[-1].Trim()
              $versionComponents = $version.Split('+')[0]
              $patch = $versionComponents.Split('.')[2]
              $buildNumber = $version.Split('+')[1]
              $newPatch = [int]$patch + 1
              #$newBuildNumber = [int]$buildNumber + 1
              $newVersion = $versionComponents.Split('.')[0] + '.' + $versionComponents.Split('.')[1] +'.'+ $newPatch + '+' + $buildNumber
              # $newVersion = $versionComponents + '+' + $newBuildNumber
              (Get-Content $filePath).replace($version, $newVersion) | Set-Content $filePath

        - script: |
            git config --global user.email pipeline@tfoco.com & git config --global user.name "Pipeline"
          workingDirectory: $(System.DefaultWorkingDirectory)

        - script: |
            @echo off
            git checkout -b master
            git branch
            ECHO SOURCE BRANCH IS %BUILD_SOURCEBRANCH%
            ECHO GIT STATUS
            git status
            ECHO GIT ADD pubspec.yaml
            git add pubspec.yaml
            ECHO GIT COMMIT
            git commit -m "Incremented version Number of the Package"
            ECHO GIT PUSH
            git push --set-upstream origin master
          displayName: Updated Pubsec.yaml
          workingDirectory: $(System.DefaultWorkingDirectory)
              

- stage: AndroidStage
  dependsOn: ParallelJobs
  displayName: Android
  jobs:
  - job: Build_Android_App
    pool:
      vmImage: 'macOS-latest'
    steps:
    - task: FlutterInstall@0
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'custom'
        customVersion: "3.7.5"
      displayName: "Flutter - Install Flutter SDK"
      
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '11'
        jdkArchitectureOption: x64
        jdkSourceOption: PreInstalled
      displayName: "Java - Intsall Java 11"

    - script:
        $(flutter_bin)/flutter config --no-analytics
      displayName: "Flutter - Disable Analytics"

    - script:
        $(flutter_bin)/flutter gen-l10n import 'package:flutter_gen/gen_l10n/app_localizations.dart'
      displayName: "Flutter - Generate Localizations"
    
    # - script:
    #     $(flutter_bin)/flutter pub run build_runner build --delete-conflicting-outputs
    #   displayName: "Flutter - Generate Mocks"

    - task: FlutterBuild@0
      inputs:
        target: 'apk'
        projectDirectory: '.'
        entryPoint: "lib/main.dart"
        iosCodesign: false
        extraArgs: "--target-platform android-arm,android-arm64 --dart-define=env=qa --release"
      displayName: "Flutter - Build Mobile App"


    - task: CopyFiles@2
      displayName: "Copy app to staging directory"
      inputs:
        sourceFolder: '$(Agent.BuildDirectory)'
        contents: '/Users/runner/work/1/s/build/app/outputs/flutter-apk/app-release.apk'
        targetFolder: '$(Build.StagingDirectory)'
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: "Publish APK file"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'APK'
        publishLocation: 'Container'

- stage: "Push_APK_To_BroswerStack"
  dependsOn: "AndroidStage"
  displayName: "Push APK to BrowserStack"
  jobs:
    - job: PushAPK
      steps:

        - task: DownloadBuildArtifacts@0
          displayName: "Download Pipeline Artifacts"
          inputs:
              buildType: 'current'
              downloadType: "single"
              artifactName: 'APK'
              downloadPath:  '$(System.DefaultWorkingDirectory)'
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              $username = $env:BrowserStack_Username
              $access_key = $env:BrowserStack_key
                            
              $base64AuthInfo= [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f $username,$access_key)))
                            
              $headers = @{
              "Authorization" = "Basic $base64AuthInfo"
              }
              $url = "https://api-cloud.browserstack.com/app-live/recent_apps/WMD-NativeMobile-Andriod-QA?limit=50"
              $response = Invoke-WebRequest -Uri $url -Method GET -Headers $headers
              $apps = $response.Content| ConvertFrom-Json	
              foreach ($app in $apps) {
              $app_id = $app.app_id
              
              $url = "https://api-cloud.browserstack.com/app-live/app/delete/$app_id"
              if($app_id -ne $null)
              {
              $response = Invoke-WebRequest -Uri $url -Method DELETE -Headers $headers
              Write-Output "Deleted: $app_id "
              }
              else
              {
              Write-Output "No Apps to delete"
              }
              }
          env:
            BrowserStack_Username: $(BrowserStack_Username)
            BrowserStack_key: $(BrowserStack_key)

        - script:
            'curl -u "$(BrowserStack_Username):$(BrowserStack_key)" -X POST "https://api-cloud.browserstack.com/app-live/upload" -F "file=@$(Build.SourcesDirectory)/APK/app-release.apk" -F "data={\"custom_id\": \"WMD-NativeMobile-Andriod-QA\"}"'
          displayName: "BrowserStack - Publish Android App"
          env:
            BrowserStack_Username: $(BrowserStack_Username)
            BrowserStack_key: $(BrowserStack_key)
        - task: AppCenterDistribute@3
          inputs:
            serverEndpoint: 'Appcenter-WMD-AND'
            appSlug: 'The-Family-Office/wmd'
            appFile: '$(System.DefaultWorkingDirectory)/APK/app-release.apk'
            symbolsOption: 'Android'
            releaseNotesOption: 'input'
            releaseNotesInput: |
              Release Notes:
              
              Introducing the Wealth Dashboard app for iOS!
              
              We've made several performance improvements and bug fixes to ensure a smooth and stable experience for our users.
              
              We're always working to improve our app and would love to hear your feedback. If you have any suggestions or issues, please reach out to us at inquiry@tfoco.dev
              
              Thank you for using Wealth Dashboard!
            destinationType: 'groups'


- stage: iOSStage
  dependsOn: ParallelJobs
  displayName: iOS
  jobs:
  - job: iOSJob
    pool:
      vmImage: 'macOS-latest'
    displayName: Build_iOS_App
    steps: 
    - task: FlutterInstall@0
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'custom'
        customVersion: "3.3.2"
      displayName: "Flutter - Install Flutter SDK"

    - task: InstallAppleCertificate@2
      inputs:
        certSecureFile: 'Certificates-wfo.p12'
        certPwd: '$(ioscertPassword)'
        keychain: 'temp'

    - task: InstallAppleProvisioningProfile@1
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: 'WMD_notify.mobileprovision'

    - task: FlutterCommand@0
      inputs:
        projectDirectory: '$(Build.SourcesDirectory)'
        arguments: 'pub get'

    - task: CocoaPods@0
      inputs:
        workingDirectory: '$(Build.SourcesDirectory)/ios/'
        forceRepoUpdate: false

    - script:
        $(flutter_bin)/flutter config --no-analytics
      displayName: "Flutter - Disable Analytics"

    - script:
        $(flutter_bin)/flutter gen-l10n import 'package:flutter_gen/gen_l10n/app_localizations.dart'
      displayName: "Flutter - Generate Localizations"

    - script:
        $(flutter_bin)/flutter build ipa --no-codesign --target=lib/main.dart --dart-define=env=qa
      displayName: "Flutter - Build iOS App"

    - script: |
          /usr/libexec/PlistBuddy -c "Clear dict" _XcodeTaskExportOptions.plist
          /usr/libexec/PlistBuddy -c "Add method string app-store" _XcodeTaskExportOptions.plist
          /usr/libexec/PlistBuddy -c "Add signingStyle string manual" _XcodeTaskExportOptions.plist
          /usr/libexec/PlistBuddy -c "Add signingCertificate string $(APPLE_CERTIFICATE_SIGNING_IDENTITY)" _XcodeTaskExportOptions.plist
          /usr/libexec/PlistBuddy -c "Add provisioningProfiles dict" _XcodeTaskExportOptions.plist
          /usr/libexec/PlistBuddy -c "Add provisioningProfiles:com.tfo.wmd string $(APPLE_PROV_PROFILE_UUID)" _XcodeTaskExportOptions.plist
          /usr/libexec/PlistBuddy -c "Add teamID string YH2GHVAXZJ" _XcodeTaskExportOptions.plist
          /usr/libexec/PlistBuddy -x -c "Print" _XcodeTaskExportOptions.plist


    - script: 
            '/usr/bin/xcodebuild -exportArchive -archivePath $(Build.SourcesDirectory)/build/ios/archive/Runner.xcarchive -exportOptionsPlist _XcodeTaskExportOptions.plist -exportPath $(Build.ArtifactStagingDirectory) CODE_SIGN_STYLE=Manual "CODE_SIGN_IDENTITY=iPhone Distribution: THE FAMILY OFFICE COMPANY B.S.C. (CLOSED) (YH2GHVAXZJ)" PROVISIONING_PROFILE=e0a30445-bac2-4929-a5bf-d6fbee3faee3'

    - task: CopyFiles@2
      displayName: "Copy app to staging directory"
      inputs:
        sourceFolder: '$(Agent.BuildDirectory)'
        contents: '**/*.ipa'
        targetFolder: '$(Build.ArtifactStagingDirectory)'
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: "Publish IPA file"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'IPA'
        publishLocation: 'Container'

- stage: "Deploy"
  dependsOn: "iOSStage"
  displayName: "Deploy IPA file"
  jobs:
    - job: PushIPA
      pool:
       vmImage: 'windows-latest'
      steps:
        - task: DownloadBuildArtifacts@0
          displayName: "Download Pipeline Artifacts"
          inputs:
              buildType: 'current'
              downloadType: "single"
              artifactName: 'IPA'
              downloadPath:  '$(System.DefaultWorkingDirectory)'
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              $username = $env:BrowserStack_Username
              $access_key = $env:BrowserStack_key
              $base64AuthInfo= [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f $username,$access_key)))
                            
              $headers = @{
              "Authorization" = "Basic $base64AuthInfo"
              }
              $url = "https://api-cloud.browserstack.com/app-live/recent_apps/WMD-NativeMobile-IOS-QA?limit=50"
              $response = Invoke-WebRequest -Uri $url -Method GET -Headers $headers
              $apps = $response.Content| ConvertFrom-Json	
              foreach ($app in $apps) {
              $app_id = $app.app_id
              
              $url = "https://api-cloud.browserstack.com/app-live/app/delete/$app_id"
              if($app_id -ne $null)
              {
              $response = Invoke-WebRequest -Uri $url -Method DELETE -Headers $headers
              Write-Output "Deleted: $app_id "
              }
              else
              {
              Write-Output "No Apps to delete"
              }
              }
          env:
            BrowserStack_Username: $(BrowserStack_Username)
            BrowserStack_key: $(BrowserStack_key)
             
        - script:
            'curl -u "$(BrowserStack_Username):$(BrowserStack_key)" -X POST "https://api-cloud.browserstack.com/app-live/upload" -F "file=@$(Build.SourcesDirectory)/IPA/wmd.ipa" -F "data={\"custom_id\": \"WMD-NativeMobile-IOS-QA\"}"'
          displayName: "BrowserStack - Publish IOS App"
          env:
            BrowserStack_Username: $(BrowserStack_Username)
            BrowserStack_key: $(BrowserStack_key)

        - task: AppCenterDistribute@3
          inputs:
            serverEndpoint: 'Appcenter-WMD-IOS'
            appSlug: 'The-Family-Office/wmd-ios'
            appFile: '$(System.DefaultWorkingDirectory)/IPA/wmd.ipa'
            releaseNotesOption: 'input'
            releaseNotesInput: 'WMD IOS release to Test Flight'
            destinationType: 'groups'

        - task: AppCenterDistribute@3
          inputs:
            serverEndpoint: 'Appcenter-WMD-IOS'
            appSlug: 'The-Family-Office/wmd-ios'
            appFile: '$(System.DefaultWorkingDirectory)/IPA/wmd.ipa'
            releaseNotesOption: 'input'
            releaseNotesInput: |
              Release Notes:
              
              Introducing the Wealth Dashboard app for iOS!
              
              We've made several performance improvements and bug fixes to ensure a smooth and stable experience for our users.
              
              We're always working to improve our app and would love to hear your feedback. If you have any suggestions or issues, please reach out to us at inquiry@tfoco.dev
              
              Thank you for using Wealth Dashboard!
            destinationType: 'store'
            destinationStoreId: 'f08ad21b-cff3-4b1c-9661-183231284e0f'