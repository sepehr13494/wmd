// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return fromEnvtoPlatform("android");
      case TargetPlatform.iOS:
        return fromEnvtoPlatform("ios");
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions fromEnvtoPlatform(String platform) {
    const String envFor = String.fromEnvironment(
      'env',
      defaultValue: 'dev',
    );

    switch (envFor) {
      case "uat":
        if (platform == "android") {
          return androidQa;
        } else {
          return iosQa;
        }
      case "qa":
        if (platform == "android") {
          return androidQa;
        } else {
          return iosQa;
        }
      case "prod":
        if (platform == "android") {
          return androidProd;
        } else {
          return iosProd;
        }
      case "dev":
        if (platform == "android") {
          return androidQa;
        } else {
          return iosQa;
        }
      case "developer":
        if (platform == "android") {
          return androidQa;
        } else {
          return iosQa;
        }
      default:
        if (platform == "android") {
          return androidQa;
        } else {
          return iosQa;
        }
    }
  }

  // static const FirebaseOptions android = FirebaseOptions(
  //   apiKey: 'AIzaSyA4es40UMBJnHo3nddRaWZ_mUwRXmhmvGg',
  //   appId: '1:332478051043:android:5f21dc236eab957c898bd6',
  //   messagingSenderId: '332478051043',
  //   projectId: 'wmdproject-5cb71',
  //   storageBucket: 'wmdproject-5cb71.appspot.com',
  // );

  static const FirebaseOptions androidQa = FirebaseOptions(
    apiKey: 'AIzaSyA4es40UMBJnHo3nddRaWZ_mUwRXmhmvGg',
    appId: '1:332478051043:android:5f21dc236eab957c898bd6',
    messagingSenderId: '332478051043',
    projectId: 'wmdproject-5cb71',
    storageBucket: 'wmdproject-5cb71.appspot.com',
  );

  static const FirebaseOptions androidProd = FirebaseOptions(
    apiKey: 'AIzaSyA4es40UMBJnHo3nddRaWZ_mUwRXmhmvGg',
    appId: '1:332478051043:android:97109da18906a6aa898bd6',
    messagingSenderId: '332478051043',
    projectId: 'wmdproject-5cb71',
    storageBucket: 'wmdproject-5cb71.appspot.com',
  );

  // static const FirebaseOptions ios = FirebaseOptions(
  //   apiKey: 'AIzaSyDQtZOYBvMfDx5iwHNwpUVhX9DKc-69phw',
  //   appId: '1:332478051043:ios:53049550af7ee603898bd6',
  //   messagingSenderId: '332478051043',
  //   projectId: 'wmdproject-5cb71',
  //   storageBucket: 'wmdproject-5cb71.appspot.com',
  //   iosClientId:
  //       '332478051043-e2vqllv5cu7dar76h2uel33jbntfvr7n.apps.googleusercontent.com',
  //   iosBundleId: 'com.tfo.wmd',
  // );

  static const FirebaseOptions iosQa = FirebaseOptions(
    apiKey: 'AIzaSyDQtZOYBvMfDx5iwHNwpUVhX9DKc-69phw',
    appId: '1:332478051043:ios:53049550af7ee603898bd6',
    messagingSenderId: '332478051043',
    projectId: 'wmdproject-5cb71',
    storageBucket: 'wmdproject-5cb71.appspot.com',
    iosClientId:
        '332478051043-e2vqllv5cu7dar76h2uel33jbntfvr7n.apps.googleusercontent.com',
    iosBundleId: 'com.tfo.wmd',
  );

  static const FirebaseOptions iosProd = FirebaseOptions(
    apiKey: 'AIzaSyDQtZOYBvMfDx5iwHNwpUVhX9DKc-69phw',
    appId: '1:332478051043:ios:5837c275591d2f8c898bd6',
    messagingSenderId: '332478051043',
    projectId: 'wmdproject-5cb71',
    storageBucket: 'wmdproject-5cb71.appspot.com',
    iosClientId:
        '332478051043-ie6dv43t9catn56d4mc2803u3tibdgpb.apps.googleusercontent.com',
    iosBundleId: 'com.tfo.aio',
  );
}
